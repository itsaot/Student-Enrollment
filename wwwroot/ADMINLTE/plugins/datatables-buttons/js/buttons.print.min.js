/*!
 Print button for Buttons and DataTables.
 2016 SpryMedia Ltd - datatables.net/license
*/!function (t) { "function" == typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], function (e) { return t(e, window, document) }) : "object" == typeof exports ? module.exports = function (e, n) { return e || (e = window), n || (n = require("datatables.net")(e, e.$)), n || (n = require("datatables.net-buttons")(e, e.$)), t(n, e, e.document) } : t(jQuery, window, document) }(function (t, e, n, o) { "use strict"; var i = t.fn.dataTable, r = document.createElement("a"), c = function (e) { var n, o = t(e).clone()[0], i; r.nodeName.toLowerCase() === o.nodeName.toLowerCase() && (r.href = _relToAbs(r.href)); return i.outerHTML }; function a(e) { r.href = e; var n = r.host; -1 === n.indexOf("/") && 0 !== r.pathname.indexOf("/") && (n += "/"); return r.protocol + "//" + n + r.pathname + r.search } i.ext.buttons.downloadWord = { className: "buttons-download-word", text: function (e) { return e.i18n("buttons.downloadWord", "Download DOCX") }, action: function (e, n, o, i) { var r = n.buttons.exportData(t.extend({ decodeEntities: !1 }, i.exportOptions)), a = n.buttons.exportInfo(i), l = n.columns(i.exportOptions.columns).flatten().map((function (e) { return n.settings()[0].aoColumns[n.column(e).index()].sClass })).toArray(), d =
